[{"/home/qhuy/Vscode/chat-app-react-nodejs/public/src/index.js":"1","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/App.js":"2","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/pages/Register.jsx":"3","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/pages/Chat.jsx":"4","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/pages/Login.jsx":"5","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/SetAvatar.jsx":"6","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/ChatContainer.jsx":"7","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/Contacts.jsx":"8","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/Welcome.jsx":"9","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/utils/APIRoutes.js":"10","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/ChatInput.jsx":"11","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/Logout.jsx":"12"},{"size":218,"mtime":1655631883490,"results":"13","hashOfConfig":"14"},{"size":587,"mtime":1655631883478,"results":"15","hashOfConfig":"14"},{"size":4652,"mtime":1655769427483,"results":"16","hashOfConfig":"14"},{"size":2299,"mtime":1655631883490,"results":"17","hashOfConfig":"14"},{"size":4412,"mtime":1655775927934,"results":"18","hashOfConfig":"14"},{"size":5786,"mtime":1655775391536,"results":"19","hashOfConfig":"14"},{"size":4421,"mtime":1655631883490,"results":"20","hashOfConfig":"14"},{"size":3706,"mtime":1655631883490,"results":"21","hashOfConfig":"14"},{"size":796,"mtime":1655631883490,"results":"22","hashOfConfig":"14"},{"size":456,"mtime":1655631883490,"results":"23","hashOfConfig":"14"},{"size":3432,"mtime":1655631883490,"results":"24","hashOfConfig":"14"},{"size":956,"mtime":1655631883490,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"9h67um",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/qhuy/Vscode/chat-app-react-nodejs/public/src/index.js",[],[],["69","70"],"/home/qhuy/Vscode/chat-app-react-nodejs/public/src/App.js",[],[],"/home/qhuy/Vscode/chat-app-react-nodejs/public/src/pages/Register.jsx",["71"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Logo from \"../assets/logo.svg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { registerRoute } from \"../utils/APIRoutes\";\n\nexport default function Register() {\n  const navigate = useNavigate();\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\",\n  };\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  useEffect(() => {\n    if (localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  const handleChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  const handleValidation = () => {\n    const { password, confirmPassword, username, email } = values;\n    if (password !== confirmPassword) {\n      toast.error(\n        \"Password and confirm password should be same.\",\n        toastOptions\n      );\n      return false;\n    } else if (username.length < 3) {\n      toast.error(\n        \"Username should be greater than 3 characters.\",\n        toastOptions\n      );\n      return false;\n    } else if (password.length < 8) {\n      toast.error(\n        \"Password should be equal or greater than 8 characters.\",\n        toastOptions\n      );\n      return false;\n    } else if (email === \"\") {\n      toast.error(\"Email is required.\", toastOptions);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (handleValidation()) {\n      const { email, username, password } = values;\n      const { data } = await axios.post(registerRoute, {\n        username,\n        email,\n        password,\n      });\n\n      if (data.status === false) {\n        toast.error(data.msg, toastOptions);\n      }\n      if (data.status === true) {\n        localStorage.setItem(\n          process.env.REACT_APP_LOCALHOST_KEY,\n          JSON.stringify(data.user)\n        );\n        navigate(\"/\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <FormContainer>\n        <form action=\"\" onSubmit={(event) => handleSubmit(event)}>\n          <div className=\"brand\">\n            <img src={Logo} alt=\"logo\" />\n            <h1>snappy</h1>\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            onChange={(e) => handleChange(e)}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            onChange={(e) => handleChange(e)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={(e) => handleChange(e)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"confirmPassword\"\n            onChange={(e) => handleChange(e)}\n          />\n          <button type=\"submit\">Create User</button>\n          <span>\n            Already have an account ? <Link to=\"/login\">Login.</Link>\n          </span>\n        </form>\n      </FormContainer>\n      <ToastContainer />\n    </>\n  );\n}\n\nconst FormContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    img {\n      height: 5rem;\n    }\n    h1 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    background-color: #00000076;\n    border-radius: 2rem;\n    padding: 3rem 5rem;\n  }\n  input {\n    background-color: transparent;\n    padding: 1rem;\n    border: 0.1rem solid #4e0eff;\n    border-radius: 0.4rem;\n    color: white;\n    width: 100%;\n    font-size: 1rem;\n    &:focus {\n      border: 0.1rem solid #997af0;\n      outline: none;\n    }\n  }\n  button {\n    background-color: #4e0eff;\n    color: white;\n    padding: 1rem 2rem;\n    border: none;\n    font-weight: bold;\n    cursor: pointer;\n    border-radius: 0.4rem;\n    font-size: 1rem;\n    text-transform: uppercase;\n    &:hover {\n      background-color: #4e0eff;\n    }\n  }\n  span {\n    color: white;\n    text-transform: uppercase;\n    a {\n      color: #4e0eff;\n      text-decoration: none;\n      font-weight: bold;\n    }\n  }\n`;\n","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/pages/Chat.jsx",["72","73","74","75"],[],"import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { io } from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { allUsersRoute, host } from \"../utils/APIRoutes\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\n\nexport default function Chat() {\n  const navigate = useNavigate();\n  const socket = useRef();\n  const [contacts, setContacts] = useState([]);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  useEffect(async () => {\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\n      navigate(\"/login\");\n    } else {\n      setCurrentUser(\n        await JSON.parse(\n          localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n        )\n      );\n    }\n  }, []);\n  useEffect(() => {\n    if (currentUser) {\n      socket.current = io(host);\n      socket.current.emit(\"add-user\", currentUser._id);\n    }\n  }, [currentUser]);\n\n  useEffect(async () => {\n    if (currentUser) {\n      if (currentUser.isAvatarImageSet) {\n        const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n        setContacts(data.data);\n      } else {\n        navigate(\"/setAvatar\");\n      }\n    }\n  }, [currentUser]);\n  const handleChatChange = (chat) => {\n    setCurrentChat(chat);\n  };\n  return (\n    <>\n      <Container>\n        <div className=\"container\">\n          <Contacts contacts={contacts} changeChat={handleChatChange} />\n          {currentChat === undefined ? (\n            <Welcome />\n          ) : (\n            <ChatContainer currentChat={currentChat} socket={socket} />\n          )}\n        </div>\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/pages/Login.jsx",["76"],[],"/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/SetAvatar.jsx",["77","78","79","80","81","82","83","84","85"],[],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Buffer } from \"buffer\";\nimport imageCompression from \"browser-image-compression\";\nimport loader from \"../assets/loader.gif\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { setAvatarRoute } from \"../utils/APIRoutes\";\nexport default function SetAvatar() {\n  const api = `https://api.multiavatar.com/4645646`;\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n\n  const [file, setFile] = useState(null);\n  const [file64String, setFile64String] = useState(null);\n  const [file64StringWithType, setFile64StringWithType] = useState(null);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\",\n  };\n  function onUploadFileChange(e) {\n    setFile64String(null);\n    if (e.target.files < 1 || !e.target.validity.valid) {\n      return;\n    }\n\n    compressImageFile(e);\n  }\n\n  function fileToBase64(file, cb) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      cb(null, reader.result);\n    };\n    reader.onerror = function (error) {\n      cb(error, null);\n    };\n  }\n\n  function fileToBase64(file, cb) {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      cb(null, reader.result);\n    };\n    reader.onerror = function (error) {\n      cb(error, null);\n    };\n  }\n\n  async function compressImageFile(event) {\n    const imageFile = event.target.files[0];\n\n    const options = {\n      maxWidthOrHeight: 250,\n      useWebWorker: true,\n    };\n    try {\n      const compressedFile = await imageCompression(imageFile, options);\n      // input file is compressed in compressedFile, now write further logic here\n\n      fileToBase64(compressedFile, (err, result) => {\n        if (result) {\n          setFile(result);\n          //   console.log(file);\n          //   console.log(String(result.split(\",\")[1]));\n          setFile64StringWithType(result);\n          setFile64String(String(result.split(\",\")[1]));\n        }\n      });\n    } catch (error) {\n      setFile64String(null);\n      // console.log(error);\n    }\n  }\n\n\n  useEffect(async () => {\n    if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY))\n      navigate(\"/login\");\n  }, []);\n\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = await JSON.parse(\n        localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n      );\n\n      const { data } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar],\n      });\n\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\n          process.env.REACT_APP_LOCALHOST_KEY,\n          JSON.stringify(user)\n        );\n        navigate(\"/\");\n      } else {\n        toast.error(\"Error setting avatar. Please try again.\", toastOptions);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    const data = [];\n    for (let i = 0; i < 4; i++) {\n      const image = await axios.get(\n        `${api}/${Math.round(Math.random() * 1000)}`\n      );\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString(\"base64\"));\n    }\n    setAvatars(data);\n    setIsLoading(false);\n  }, []);\n  return (\n    <>\n      {isLoading ? (\n        <Container>\n          <img src={loader} alt=\"loader\" className=\"loader\" />\n        </Container>\n      ) : (\n        <Container>\n          <div className=\"title-container\">\n            <h1>Pick an Avatar as your profile picture</h1>\n          </div>\n          <div className=\"avatars\">\n            {avatars.map((avatar, index) => {\n              return (\n                <div\n                  className={`avatar ${\n                    selectedAvatar === index ? \"selected\" : \"\"\n                  }`}\n                >\n                  <img\n                    src={`data:image/svg+xml;base64,${avatar}`}\n                    alt=\"avatar\"\n                    key={avatar}\n                    onClick={() => setSelectedAvatar(index)}\n                  />\n                </div>\n              );\n            })}\n          </div>\n          <button onClick={setProfilePicture} className=\"submit-btn\">\n            Set as Profile Picture\n          </button>\n          <ToastContainer />\n        </Container>\n      )}\n    </>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 3rem;\n  background-color: #131324;\n  height: 100vh;\n  width: 100vw;\n\n  .loader {\n    max-inline-size: 100%;\n  }\n\n  .title-container {\n    h1 {\n      color: white;\n    }\n  }\n  .avatars {\n    display: flex;\n    gap: 2rem;\n\n    .avatar {\n      border: 0.4rem solid transparent;\n      padding: 0.4rem;\n      border-radius: 5rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      img {\n        height: 6rem;\n        transition: 0.5s ease-in-out;\n      }\n    }\n    .selected {\n      border: 0.4rem solid #4e0eff;\n    }\n  }\n  .submit-btn {\n    background-color: #4e0eff;\n    color: white;\n    padding: 1rem 2rem;\n    border: none;\n    font-weight: bold;\n    cursor: pointer;\n    border-radius: 0.4rem;\n    font-size: 1rem;\n    text-transform: uppercase;\n    &:hover {\n      background-color: #4e0eff;\n    }\n  }\n`;\n","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/ChatContainer.jsx",["86","87"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./ChatInput\";\nimport Logout from \"./Logout\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { sendMessageRoute, recieveMessageRoute } from \"../utils/APIRoutes\";\n\nexport default function ChatContainer({ currentChat, socket }) {\n  const [messages, setMessages] = useState([]);\n  const scrollRef = useRef();\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n\n  useEffect(async () => {\n    const data = await JSON.parse(\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n    );\n    const response = await axios.post(recieveMessageRoute, {\n      from: data._id,\n      to: currentChat._id,\n    });\n    setMessages(response.data);\n  }, [currentChat]);\n\n  useEffect(() => {\n    const getCurrentChat = async () => {\n      if (currentChat) {\n        await JSON.parse(\n          localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n        )._id;\n      }\n    };\n    getCurrentChat();\n  }, [currentChat]);\n\n  const handleSendMsg = async (msg) => {\n    const data = await JSON.parse(\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n    );\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: data._id,\n      msg,\n    });\n    await axios.post(sendMessageRoute, {\n      from: data._id,\n      to: currentChat._id,\n      message: msg,\n    });\n\n    const msgs = [...messages];\n    msgs.push({ fromSelf: true, message: msg });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", (msg) => {\n        setArrivalMessage({ fromSelf: false, message: msg });\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <Container>\n      <div className=\"chat-header\">\n        <div className=\"user-details\">\n          <div className=\"avatar\">\n            <img\n              src={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\n              alt=\"\"\n            />\n          </div>\n          <div className=\"username\">\n            <h3>{currentChat.username}</h3>\n          </div>\n        </div>\n        <Logout />\n      </div>\n      <div className=\"chat-messages\">\n        {messages.map((message) => {\n          return (\n            <div ref={scrollRef} key={uuidv4()}>\n              <div\n                className={`message ${\n                  message.fromSelf ? \"sended\" : \"recieved\"\n                }`}\n              >\n                <div className=\"content \">\n                  <p>{message.message}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <ChatInput handleSendMsg={handleSendMsg} />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 10%;\n  gap: 0.1rem;\n  overflow: hidden;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n  }\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n          max-width: 70%;\n        }\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\n","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/Contacts.jsx",["88"],[],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../assets/logo.svg\";\n\nexport default function Contacts({ contacts, changeChat }) {\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(async () => {\n    const data = await JSON.parse(\n      localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n    );\n    setCurrentUserName(data.username);\n    setCurrentUserImage(data.avatarImage);\n  }, []);\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n  return (\n    <>\n      {currentUserImage && currentUserImage && (\n        <Container>\n          <div className=\"brand\">\n            <img src={Logo} alt=\"logo\" />\n            <h3>snappy</h3>\n          </div>\n          <div className=\"contacts\">\n            {contacts.map((contact, index) => {\n              return (\n                <div\n                  key={contact._id}\n                  className={`contact ${\n                    index === currentSelected ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => changeCurrentChat(index, contact)}\n                >\n                  <div className=\"avatar\">\n                    <img\n                      src={`data:image/svg+xml;base64,${contact.avatarImage}`}\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"username\">\n                    <h3>{contact.username}</h3>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"current-user\">\n            <div className=\"avatar\">\n              <img\n                src={`data:image/svg+xml;base64,${currentUserImage}`}\n                alt=\"avatar\"\n              />\n            </div>\n            <div className=\"username\">\n              <h2>{currentUserName}</h2>\n            </div>\n          </div>\n        </Container>\n      )}\n    </>\n  );\n}\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 75% 15%;\n  overflow: hidden;\n  background-color: #080420;\n  .brand {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    justify-content: center;\n    img {\n      height: 2rem;\n    }\n    h3 {\n      color: white;\n      text-transform: uppercase;\n    }\n  }\n  .contacts {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    gap: 0.8rem;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .contact {\n      background-color: #ffffff34;\n      min-height: 5rem;\n      cursor: pointer;\n      width: 90%;\n      border-radius: 0.2rem;\n      padding: 0.4rem;\n      display: flex;\n      gap: 1rem;\n      align-items: center;\n      transition: 0.5s ease-in-out;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n    .selected {\n      background-color: #9a86f3;\n    }\n  }\n\n  .current-user {\n    background-color: #0d0d30;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    .avatar {\n      img {\n        height: 4rem;\n        max-inline-size: 100%;\n      }\n    }\n    .username {\n      h2 {\n        color: white;\n      }\n    }\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      gap: 0.5rem;\n      .username {\n        h2 {\n          font-size: 1rem;\n        }\n      }\n    }\n  }\n`;\n","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/Welcome.jsx",["89"],[],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Robot from \"../assets/robot.gif\";\nexport default function Welcome() {\n  const [userName, setUserName] = useState(\"\");\n  useEffect(async () => {\n    setUserName(\n      await JSON.parse(\n        localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n      ).username\n    );\n  }, []);\n  return (\n    <Container>\n      <img src={Robot} alt=\"\" />\n      <h1>\n        Welcome, <span>{userName}!</span>\n      </h1>\n      <h3>Please select a chat to Start messaging.</h3>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  flex-direction: column;\n  img {\n    height: 20rem;\n  }\n  span {\n    color: #4e0eff;\n  }\n`;\n","/home/qhuy/Vscode/chat-app-react-nodejs/public/src/utils/APIRoutes.js",[],[],"/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/ChatInput.jsx",[],[],"/home/qhuy/Vscode/chat-app-react-nodejs/public/src/components/Logout.jsx",[],[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":30,"column":6,"nodeType":"96","endLine":30,"endColumn":8,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":17,"column":13,"nodeType":"99","endLine":27,"endColumn":4},{"ruleId":"94","severity":1,"message":"95","line":27,"column":6,"nodeType":"96","endLine":27,"endColumn":8,"suggestions":"100"},{"ruleId":"94","severity":1,"message":"98","line":35,"column":13,"nodeType":"99","endLine":44,"endColumn":4},{"ruleId":"94","severity":1,"message":"95","line":44,"column":6,"nodeType":"96","endLine":44,"endColumn":19,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"95","line":24,"column":6,"nodeType":"96","endLine":24,"endColumn":8,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":19,"column":10,"nodeType":"105","messageId":"106","endLine":19,"endColumn":14},{"ruleId":"103","severity":1,"message":"107","line":20,"column":10,"nodeType":"105","messageId":"106","endLine":20,"endColumn":22},{"ruleId":"103","severity":1,"message":"108","line":21,"column":10,"nodeType":"105","messageId":"106","endLine":21,"endColumn":30},{"ruleId":"103","severity":1,"message":"109","line":29,"column":12,"nodeType":"105","messageId":"106","endLine":29,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":49,"column":12,"nodeType":"105","messageId":"112","endLine":49,"endColumn":24},{"ruleId":"94","severity":1,"message":"98","line":87,"column":13,"nodeType":"99","endLine":90,"endColumn":4},{"ruleId":"94","severity":1,"message":"95","line":90,"column":6,"nodeType":"96","endLine":90,"endColumn":8,"suggestions":"113"},{"ruleId":"94","severity":1,"message":"98","line":118,"column":13,"nodeType":"99","endLine":129,"endColumn":4},{"ruleId":"94","severity":1,"message":"114","line":129,"column":6,"nodeType":"96","endLine":129,"endColumn":8,"suggestions":"115"},{"ruleId":"94","severity":1,"message":"98","line":14,"column":13,"nodeType":"99","endLine":23,"endColumn":4},{"ruleId":"94","severity":1,"message":"116","line":62,"column":6,"nodeType":"96","endLine":62,"endColumn":8,"suggestions":"117"},{"ruleId":"94","severity":1,"message":"98","line":9,"column":13,"nodeType":"99","endLine":15,"endColumn":4},{"ruleId":"94","severity":1,"message":"98","line":6,"column":13,"nodeType":"99","endLine":12,"endColumn":4},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["120"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["121"],["122"],["123"],"no-unused-vars","'file' is assigned a value but never used.","Identifier","unusedVar","'file64String' is assigned a value but never used.","'file64StringWithType' is assigned a value but never used.","'onUploadFileChange' is defined but never used.","no-redeclare","'fileToBase64' is already defined.","redeclared",["124"],"React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"127","fix":"129"},{"desc":"130","fix":"131"},{"desc":"127","fix":"132"},{"desc":"127","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [navigate]",{"range":"138","text":"139"},{"range":"140","text":"139"},"Update the dependencies array to be: [currentUser, navigate]",{"range":"141","text":"142"},{"range":"143","text":"139"},{"range":"144","text":"139"},"Update the dependencies array to be: [api]",{"range":"145","text":"146"},"Update the dependencies array to be: [socket]",{"range":"147","text":"148"},[830,832],"[navigate]",[967,969],[1398,1411],"[currentUser, navigate]",[772,774],[2617,2619],[3700,3702],"[api]",[1734,1736],"[socket]"]